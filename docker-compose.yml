version: '3.4'
services:
#    sonarqube:
#        image: sonarqube
#        ports:
#            - "9000:9000"
    gitlab:
        image: gitlab/gitlab-ce:latest
        container_name: my_gitlab
        environment:
            #http://localhost:10080/help/administration/packages/container_registry.md
            GITLAB_OMNIBUS_CONFIG: |
                gitlab_rails['initial_root_password'] = 'adminadmin'
                gitlab_rails['registry_enabled'] = true
                gitlab_rails['registry_host'] = 'localhost'
                gitlab_rails['registry_port'] = '35000'
                gitlab_rails['registry_api_url'] = 'http://my_registry:5000/'
            #gitlab_rails['initial_root_email'] = 'adminadmin@email.com'
            #GITLAB_ROOT_PASSWORD: "admin"
            #GITLAB_ROOT_EMAIL: "hello@world.com"
        ports:
            - "10080:80"
            - "10443:443"
            - "10022:22"
        networks:
            - bridge
#    runner:
        #https://www.ikus-soft.com/en/blog/2018-05-23-how-to-setup-gitlab-cicd/
#        build:
#            context: .
#            dockerfile: runner-dockerfile
#       image: centos:8
#       ports:
#           - "20022:22"
    registry:
        image: registry:2
        container_name: my_registry
        ports:
            - "35000:5000"
        networks:
            - bridge
    jenkins:
        build:
            context: .
            dockerfile: Dockerfile.jenkins
            args:
                API_KEY: ${API_KEY}
        environment:
            # found CASC_JENKINS_CONFIG env var here
            # https://codebabel.com/jcasc-stateless-ci/
            CASC_JENKINS_CONFIG: /var/jenkins_home/jenkins_casc.yaml
            # from https://stackoverflow.com/questions/44727535/jenkins-docker-set-admin-password-from-environment-variable
            JAVA_OPTS: -Djenkins.install.runSetupWizard=false
            JENKINS_OPTS: --argumentsRealm.roles.user=root --argumentsRealm.passwd.admin=adminadmin --argumentsRealm.roles.admin=admin
            SNYK_API_KEY: ${API_KEY}
        ports:
            - "58080:8080"
            - "50000:50000" 
        networks:
            - bridge
        #volumes:
            # found docker-in-docker must-haves here
            # https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
            #- /var/run/docker.sock:/var/run/docker.sock
            #- /usr/bin/docker:/usr/bin/docker

#https://docs.docker.com/compose/networking/
#

networks:
  bridge:
    driver: bridge